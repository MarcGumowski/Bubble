{
    "collab_server" : "",
    "contents" : "//\n//  Bubble Interactive Chart\n//\n// Marc Gumowski\n//\n//\n// .range([4,80]) -> forces (0.08), alpha(0.3)\n\n// The data are loaded in the main .Rmd file under the var name data.\n// This script has to be loaded in the main file.\n\n\n\n// Initial Data\nvar data = dataBubble[\"01 - Animal products\"];\n\nwindow.onload = drawBubble(data);\n\n\n\n\n// Bubble Chart\nfunction drawBubble(data) {\n  \n  //convert numerical values from strings to numbers, rename variables\n  data = data.map(function(d){ d.value = +d['Imports_Product']; return d; });\n  data = data.map(function(d){ d.tariff = +d['Avg_Product_Tariffs']; return d});\n  data = data.map(function(d){ d.id = d['ISO-3A']; return d});\n  data = data.map(function(d){ d.name = d['Country']; return d});\n  data = data.map(function(d){ d.region = d['Region']; return d});\n  //Get the max and min import value\n  var maxValue = d3.max(data, function(d) { return d.value; });\n  var minValue = d3.min(data, function(d) { return d.value; });\n  //Get the max tariff value\n  var maxTariff = d3.max(data, function(d) { return d.tariff; });\n  // Format imports\n  var formatNumber = d3.format(\",.4f\"),\n    format = function(d) { return formatNumber(d); };\n    \n  //Svg\n  var divBubble1 = d3.select('#bubbleInteractive').append('div')\n    .attr('class', 'tooltip')\n    .style('opacity', 0);\n  \n  var rescale = 0.90, \n    height = 600 * rescale,\n    width = 900 * rescale,\n    color = d3.scaleLinear()\n    .domain([0, 5, 10, 15, 20, 25, 30])\n    //viridis\n    //.range([\"#FDE725\", \"#8FD744\", \"#35B779\", \"#21908C\", \"#31688E\", \"#443A83\", \"#440154\"]);\n    //plasma\n    .range([\"#F0F921\", \"#FEBC2A\", \"#F48849\", \"#DB5C68\", \"#B93289\", \"#8B0AA5\", \"#5402A3\"]);\n    //magma\n    //.range([\"#FCFDBF\", \"#FEBA80\", \"#F8765C\", \"#D3436E\", \"#982D80\", \"#5F187F\", \"#23115F\"]);\n    //inferno\n    //.range([\"#FCFFA4\", \"#FAC127\", \"#F57D15\", \"#D44842\", \"#9F2A63\", \"#65156E\", \"#280B54\"]);\n    \n  var svg = d3.select('#bubbleInteractive')\n    .append('svg')\n    .attr('id', 'bubbleInteractiveSvg')\n    .attr('height', height)\n    .attr('width', width)\n    .append('g')\n    .attr('transform', 'translate(0,0)');\n  \n  // Rect to click on (background)\n  var rect = svg.append(\"rect\")\n    .attr(\"height\", height)\n    .attr(\"width\", width)\n    .style(\"fill\", \"transparent\");\n  \n  var radiusScale = d3.scaleSqrt()\n    .domain([minValue, maxValue])\n    .range([2, 40]);\n  \n  // Forces\n  \n  // Constants used in the simulation\n  var strengthCombine = 0.1;\n  var strengthMove = 0.2;\n  var strengthCharge = -2;\n  var strengthCollide = 0.5;\n  \n  var forceXCombine =  d3.forceX(width / 2)\n    .strength(strengthCombine);\n  var forceYCombine =  d3.forceY(height / 2)\n    .strength(strengthCombine);\n  \n  var forceXOrderImports =  d3.forceX(function(d) {return (Math.log(d.value + 1.3) / Math.log(maxValue + 1.3) * 0.83 * width) + 30;})\n    .strength(strengthMove);\n  \n  var forceXOrderTariffs =  d3.forceX(function(d) {return (Math.log(d.tariff + 1.3) / Math.log(maxTariff + 1.3) * 0.83 * width) + 30;})\n    .strength(strengthMove);\n    \n  var forceXSeparate =  d3.forceX(function(d) {\n    if(d.region === 'North America') {\n      return 175 * rescale;\n    } else if(d.region === 'South and Central America and the Caribbean') {\n      return 200 * rescale;\n    } else if(d.region === 'Europe') {\n      return 450 * rescale;\n    } else if(d.region === 'Africa') {\n      return 450 * rescale;\n    } else if(d.region === 'Commonwealth of Independent States (CIS)') {\n      return 600 * rescale;\n    } else if(d.region === 'Middle East') {\n      return 550 * rescale;\n    } else if(d.region === 'Asia') {\n      return 750 * rescale;\n    } else {\n      return width / 2;\n    }\n  }).strength(strengthMove);\n  \n  var forceYSeparate =  d3.forceY(function(d) {\n    if(d.region === 'North America') {\n      return 200 * rescale;\n    } else if(d.region === 'South and Central America and the Caribbean') {\n      return 400 * rescale;\n    } else if(d.region === 'Europe') {\n      return 150 * rescale;\n    } else if(d.region === 'Africa') {\n      return 350 * rescale;\n    } else if(d.region === 'Commonwealth of Independent States (CIS)') {\n      return 125 * rescale;\n    } else if(d.region === 'Middle East') {\n      return 245 * rescale;\n    } else if(d.region === 'Asia') {\n      return 250 * rescale;\n    } else {\n      return height/ 2;\n    }\n  }).strength(strengthMove);\n  \n  var forceCharge = d3.forceManyBody()\n      .strength(strengthCharge);\n      \n  var forceCollide = d3.forceCollide()\n        .strength(strengthCollide)\n        .radius(function(d) {\n    return radiusScale(d.value) + 2;\n  });    \n      \n  var simulation = d3.forceSimulation()\n      .force('x', forceXCombine)\n      .force('y', forceYCombine)\n      .force('charge', forceCharge)\n      .force('collide', forceCollide);\n  \n  var circles = svg.selectAll('.countryBubble')\n      .data(data)\n      .enter().append(\"g\");\n  \n  // Bubbles\n  circles.append('circle')\n    .attr('class', 'countryBubble')\n    .attr('r', function(d){\n    return radiusScale(d.value);\n  })\n  .on('click', function(d) {\n    console.log(d);\n  })\n  .style('fill', function(d) { return color(d.tariff); \n  })\n  .on('mouseover', function(d) {      \n    divBubble1.transition()        \n    .duration(0)      \n    .style('opacity', 1);      \n    divBubble1.html('<b><font size = \"3\">' + d.name + '</font></b>' + '<br/>' + d.region  + '<br/>' +'Imports: ' + format(d.value) + ' Bn US$' +'<br/>'+ 'Average applied tariffs: ' + d.tariff + '%')\n    .style('left', (d3.event.pageX) + 'px')       //Tooltip positioning, edit CSS\n    .style('top', (d3.event.pageY - 28) + 'px');  //Tooltip positioning, edit CSS\n    d3.select(this)\n    .transition()\n    .duration(0)\n    .style('stroke-width', 1)\n    .style('stroke', color(d.tariff))\n    .style('fill-opacity', 0.5);\n  })\n  .on('mouseout', function(d) {       \n    divBubble1.transition()        \n    .duration(500)      \n    .style('opacity', 0);\n    d3.select(this)\n    .transition()\n    .duration(0)\n    .style('stroke-width', 'none')\n    .style('stroke', 'none')\n    .style('fill-opacity', 1);\n  });\n  \n  \n  var newFont = '0px sans-serif';\n  //Bubbles Text on click\n  circles.append(\"text\")\n    .attr('class', 'countryText')\n    .text(function(d) {\n       var text = d.id;\n        return text;\n    })\n    .style('fill', '#666666')\n    .style('font', '0px sans-serif')\n    .style('font-family', 'calibri')\n    .style('text-anchor', 'middle');\n  \n    rect.on(\"click\", function() {\n    \t  if (newFont === '0px sans-serif') {\n    \t    newFont = function(d) { \n    \t      var len = d.id.length;\n    \t      var size = radiusScale(d.value) / 5;\n    \t      size *= 10 / len;\n    \t      size += 1;\n    \t      return Math.round(size)+'px sans-serif';\n    \t    };\n    \t  } else { newFont = '0px sans-serif';}\n    \t  d3.selectAll(\".countryText\")\n    \t    .style('font', newFont)\n    \t    .attr(\"dy\", '.35em');\n  });\n  \n  \n  \n  // Buttons\n  d3.select('#region')\n    .on('click', function(d){\n      simulation\n        .force('x', forceXSeparate)\n        .force('y', forceYSeparate)\n        .alpha(0.3)\n        .restart();      \n    });\n  \n    d3.select('#combine')\n    .on('click', function(d){\n      simulation\n        .force('x', forceXCombine)\n        .force('y', forceYCombine)\n        .alpha(0.3)\n        .restart();\n    });\n    \n        d3.select('#orderImports')\n    .on('click', function(d){\n      simulation\n        .force('x', forceXOrderImports)\n        .force('y', forceYCombine)\n        .alpha(0.3)\n        .restart();\n    });\n    \n        d3.select('#orderTariffs')\n    .on('click', function(d){\n      simulation\n        .force('x', forceXOrderTariffs)\n        .force('y', forceYCombine)\n        .alpha(0.3)\n        .restart();\n    });    \n  \n  // Simulation\n  simulation.nodes(data)\n  .on('tick', ticked);\n  \n  function ticked() {\n    circles\n    .attr(\"transform\", function (d) {\n        var k = \"translate(\" + d.x + \",\" + d.y + \")\";\n        return k;\n    });\n  }\n  \n  \n  //Legend \n  var legendTitleText = ['Color: Average applied tariffs in % - Size: Amount of imports in billion US$ - Click the background to show labels'];\n  var legend = svg.selectAll('.legend')\n  .data(color.domain())\n  .enter().append('g')\n  .attr('class', 'legend')\n  .attr('transform', function(d, i) { return 'translate(' + i * 27 + ', 0)'; });\n  \n  legend.append('rect')\n  .attr('y', height - 38)\n  .attr('width', 27)\n  .attr('height', 18)\n  .style('fill', color);\n  \n  legend.append('text')\n  .attr('y', height - 46)\n  .attr('x', 18)\n  .attr('dy', '.35em')\n  .style('text-anchor', 'end')\n  .text(function(d) { return d; });\n  \n  legend.append('text')\n  .data(legendTitleText)\n  .attr('y', height - 10)\n  .attr('x', 0)\n  .attr('dy', '.35em')\n  .text(function(d) {\n    return d;\n  });\n    \n}\n\n\n\n\n\n//Update data section (called from the onchange)\nfunction updateData() {\n  var newArray = d3.select(\"#opts\").node().value;\n  var data = dataBubble[newArray];\n  d3.select(\"#bubbleInteractiveSvg\").remove();\n  drawBubble(data);\n}\n\nd3.select('#opts')\n  .on('change', updateData);  \n  \n  \n  \n  \n  \n  \n  \n  \n  ",
    "created" : 1498153093885.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "266913016",
    "id" : "CF22859B",
    "lastKnownWriteTime" : 1497533914,
    "last_content_update" : 1497533914,
    "path" : "~/GitHub/Bubble/bubble.js",
    "project_path" : "bubble.js",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "js"
}